#!/bin/bash

set -euxo pipefail

if [ -z "${SYNCTHING_UID:-}" ]; then
    echo "SYNCTHING_UID is not set."
    exit 1
fi

export SYNCTHING_USERNAME="${SYNCTHING_USERNAME:-syncthing}"
export SYNCTHING_HOME="${SYNCTHING_HOME:-/home/$SYNCTHING_USERNAME}"

# Create the syncthing user with specified UID if the user doesn't
# exist. Usually this would be used to map the container's syncthing
# user onto a specific existing user on the host machine (who owns the
# syncthing config).
if ! id -u $SYNCTHING_USERNAME; then
    useradd -u $SYNCTHING_UID $SYNCTHING_USERNAME
fi

# Ensure that the UID of the syncthing user is as requested.
if [ "$(id -u $SYNCTHING_USERNAME)" != $SYNCTHING_UID ]; then
    echo "ERROR: User $SYNCTHING_USERNAME already exists with incorrect UID $(id -u $SYNCTHING_USERNAME)"
    exit 1
fi

if [ "$(id -u)" == "$SYNCTHING_UID" ]; then
    # --userns=keep-id sets root dir as HOME, fix it first
    export HOME="$SYNCTHING_HOME"
    exec /usr/bin/syncthing
elif [ "$(id -u)" == 0 ]; then
    exec sudo -iu $SYNCTHING_USERNAME /usr/bin/syncthing
else
    echo "ERROR: Expected to run as UID $SYNCTHING_UID but running as UID $(id -u)"
    exit 1
fi
